services:
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: voting_app
    restart: unless-stopped
    working_dir: /www/wwwroot/laravel-docker-setup/projects/voting
    volumes:
      - ./projects/voting:/www/wwwroot/laravel-docker-setup/projects/voting
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voting_network
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 10s
      timeout: 5s
      retries: 3
    image: your-dockerhub-username/voting-app:latest

  queue:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: voting_queue
    restart: unless-stopped
    working_dir: /www/wwwroot/laravel-docker-setup/projects/voting
    command: php artisan queue:work --tries=3
    volumes:
      - ./projects/voting:/www/wwwroot/laravel-docker-setup/projects/voting
    depends_on:
      app:
        condition: service_healthy
    networks:
      - voting_network
    image: your-dockerhub-username/voting-queue:latest

  nginx:
    image: your-dockerhub-username/voting-nginx:latest
    container_name: voting_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./projects/voting:/www/wwwroot/laravel-docker-setup/projects/voting
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
      - ./docker/nginx/ssl/:/etc/nginx/ssl/
    depends_on:
      app:
        condition: service_healthy
    networks:
      - voting_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:14-alpine
    container_name: voting_db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_DATABASE:-voting}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - voting_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    container_name: voting_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - voting_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  pgadmin:
    image: dpage/pgadmin4
    container_name: voting_pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-pgadmin}
      - PGADMIN_CONFIG_SERVER_MODE=False
    ports:
      - "5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - voting_network

networks:
  voting_network:
    driver: bridge

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  pgadmin-data:
    driver: local
