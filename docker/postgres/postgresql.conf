# PostgreSQL Configuration for Laravel Applications in Production
# -----------------------------------------------------------------
#
# This configuration is optimized for Laravel applications in a production environment.
# Settings are tuned for better performance while maintaining data safety.
#

#------------------------------------------------------------------------------
# CONNECTION SETTINGS
#------------------------------------------------------------------------------

listen_addresses = '*'                  # Listen on all available network interfaces
max_connections = 100                   # Set based on expected concurrent connections
                                        # For high-traffic sites, increase but stay below 500

# Connection Pooling
superuser_reserved_connections = 3      # Reserve connections for superuser maintenance tasks
                                        # Helps prevent locked-out scenarios

# Connection Timeouts
tcp_keepalives_idle = 300               # Seconds before sending keepalive (default: 7200)
tcp_keepalives_interval = 60            # Seconds between keepalives (default: 75)
tcp_keepalives_count = 9                # Max number of keepalive retransmits (default: 9)
                                        # These settings help detect dead connections faster

#------------------------------------------------------------------------------
# MEMORY ALLOCATION
#------------------------------------------------------------------------------

# Shared Buffers - Primary PostgreSQL cache, typically 25% of total RAM
# For a server with 16GB RAM, start with 4GB (4096MB)
shared_buffers = 4096MB                 # Adjust based on your server's available RAM

# Work Memory - Used for sorting operations, complex queries
work_mem = 32MB                         # Increase for complex queries with many sorts
                                        # Be careful as this is per-operation

# Maintenance Work Memory - For vacuum, index creation, etc.
maintenance_work_mem = 512MB            # Higher values speed up vacuum and index creation

# Effective Cache Size - Estimate of memory available for disk caching
# Set to about 75% of total RAM for dedicated database servers
effective_cache_size = 12GB             # Adjust based on your server's RAM
                                        # This helps the query planner make better decisions

# Huge Pages - Improves memory management for large shared_buffers
huge_pages = try                        # Try to use huge pages but fall back if needed

#------------------------------------------------------------------------------
# WRITE-AHEAD LOG (WAL) SETTINGS
#------------------------------------------------------------------------------

# WAL Level - Controls amount of information written to WAL
wal_level = replica                     # Minimum level for replication
                                        # Options: minimal, replica, logical

# WAL Sync - Controls sync to disk
synchronous_commit = on                 # Default: on (safer but slower)
                                        # Set to 'off' for max performance at risk of data loss

# WAL Size
max_wal_size = 2GB                      # Maximum WAL size before checkpoint is triggered
min_wal_size = 1GB                      # Minimum WAL size to maintain

# WAL Writer - Tuning the WAL writer process
wal_writer_delay = 200ms                # Time between WAL writes
wal_writer_flush_after = 1MB            # WAL flush threshold

#------------------------------------------------------------------------------
# CHECKPOINT TUNING
#------------------------------------------------------------------------------

# Checkpoint settings control when and how often data is flushed to disk
checkpoint_timeout = 15min              # Max time between checkpoints
checkpoint_completion_target = 0.9      # Target duration for checkpoint completion
                                        # Higher values spread out I/O impact
checkpoint_flush_after = 256kB          # Flush after this much data
                                        # Lower values reduce spikes in I/O

#------------------------------------------------------------------------------
# QUERY PLANNER SETTINGS
#------------------------------------------------------------------------------

# Cost Settings
random_page_cost = 1.1                  # Cost of random disk access
                                        # Lower for SSD (1.1), higher for HDD (4.0)
cpu_tuple_cost = 0.03                   # Cost for processing each tuple
cpu_index_tuple_cost = 0.01             # Cost for processing each index entry
cpu_operator_cost = 0.0025              # Cost for processing each operator

# Behavior Settings
geqo = on                               # Genetic Query Optimizer
geqo_threshold = 12                     # Use GEQO for queries with FROM items >= this number
                                        # For complex queries joining many tables

#------------------------------------------------------------------------------
# AUTOVACUUM SETTINGS
#------------------------------------------------------------------------------

# AutoVacuum - Crucial for maintaining table statistics and reclaiming space
autovacuum = on                         # Enable autovacuum subprocess
autovacuum_max_workers = 4              # Maximum number of autovacuum workers
                                        # Increase for databases with many tables

# Vacuum Thresholds
autovacuum_vacuum_threshold = 50        # Minimum row updates before vacuum
                                        # Lower values vacuum more frequently
autovacuum_analyze_threshold = 50       # Minimum row updates before analyze
                                        # Lower values refresh statistics more frequently

# Vacuum Scale Factor
autovacuum_vacuum_scale_factor = 0.05   # Fraction of table size before vacuum
                                        # Lower values (0.01-0.05) for frequently updated tables
autovacuum_analyze_scale_factor = 0.025 # Fraction of table size before analyze
                                        # Lower values refresh statistics more frequently

# Vacuum Performance
autovacuum_vacuum_cost_delay = 2ms      # Vacuum pause time between cost limits
                                        # Lower values make vacuum more aggressive
autovacuum_vacuum_cost_limit = 1000     # Vacuum cost limit before pausing
                                        # Higher values make vacuum more aggressive

#------------------------------------------------------------------------------
# LOGGING SETTINGS FOR TROUBLESHOOTING
#------------------------------------------------------------------------------

# Error Reporting
log_min_messages = warning              # Lowest message level to log
log_min_error_statement = error         # Statements causing errors are logged

# Query Logging - Useful for identifying slow queries
log_min_duration_statement = 1000       # Log queries taking over 1000ms (1s)
                                        # Set to -1 to disable or lower for more verbose logging

#------------------------------------------------------------------------------
# STATISTICS MONITORING
#------------------------------------------------------------------------------

# Statistics Collection
track_activities = on                   # Enable collection of query activity
track_counts = on                       # Collect database statistics
track_io_timing = on                    # Collect I/O timing statistics
                                        # Useful for identifying I/O bottlenecks

#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# Statement Behavior
search_path = '"$user", public'         # Schema search path
                                        # Important for Laravel's schema organization

# Locale and Formatting
datestyle = 'iso, mdy'                  # Date format
timezone = 'UTC'                        # Use UTC for timestamps
                                        # Critical for consistent datetime handling in Laravel

# Statement Timeouts
statement_timeout = 60000               # Max query runtime in milliseconds (60s)
                                        # Prevents runaway queries from impacting service
lock_timeout = 10000                    # Max time to wait for lock (10s)
                                        # Prevents long lock waits
idle_in_transaction_session_timeout = 600000 # Max idle transaction time (10min)
                                        # Prevents idle transactions from holding resources

#------------------------------------------------------------------------------
# END OF CONFIGURATION
#------------------------------------------------------------------------------

